ACTION			HTTP Verb		RELATIVE URI

---------------------------------------------------------------------------------

Method login
    -URL: website/api/login  ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	username : string
	    User's username; uniquely identifies user
	password : string
	    User's password
    -BEHAVIOUR:
	-If successful, login authorized, response code 200
	-Incorrect login credentials, response code 401
	-If user hasn't been created (not the credentials of a user), response code 400.
    -RESPONSE:
	-HTTP status 200
	    The body of the response is a JSON encoded user-entity with the following fields
	    username : string 
	        User's username; uniquely identifies user
	    password : string
	        User's password
	    activeRole : Role
	        User's active role on the system (i.e. Instructor, Marker, Student)
	-HTTP status 401
	    The body of the response is an error message (unauthorized)
	-HTTP status 400
	    The body of the response is an error message

Method logout
    -URL: website/api/logout  ??
    -HTTP: POST
    -PARAMETERS: None
    -BEHAVIOUR:
	-If successful, remove authorization of user, response code 204
    -RESPONSE:
	-HTTP status 204
	    No response body

Method createAccount
    -URL: website/api/user ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	username : string 
	    User's username; uniquely identifies user
	password : string
	    User's password
	activeRole : Role
	    User's active role on the system (i.e. Instructor, Marker, Student)
	firstname : string
	    User's first name
	lastname : string
	    User's last name
    -BEHAVIOUR:
	-If successful, user account is created with given parameters, response code 201
	-If the request is invalid, response code 400
    -RESPONSE:
	-HTTP status 201
	    The body of the response is a JSON encoded user-entity with the parameter fields above
	-HTTP status 400
	    The body of the response is an error message

Method createCourse
    -URL: website/api/course ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	courseID : string
	    Unique identifier for course & section
	term : string
	    Semester specified for this instance of the course
    -BEHAVIOUR:
	-If successful, course is added with given parameters, response code 201
	-If the request is invalid, response code 400
    -RESPONSE:
	-HTTP status 201
	    The body of the response is a JSON encoded course-entity with the parameter fields above
	-HTTP status 400
	    The body of the response is an error message

Method addUserToCourse
    -URL: website/api/course ??
    -HTTP: PUT
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	courseID : string
	    Unique identifier for course & section
	term : string
	    Semester specified for this instance of the course
	username : string
	    User's username; uniquely identifies user
	activeRole : Role
	    User's active role on the system (i.e. Instructor, Marker, Student)
    -BEHAVIOUR:
	-If successful, user is added to appropriate collection based on role, response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method removeUserFromCourse
    -URL: website/api/ ??
    -HTTP: DELETE
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	courseID : string
	username : string
	    User's username; uniquely identifies user
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method resetPassword
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method setNewPassword
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method addNewAssignment
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method createTestSuite
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method addTestSuiteToAssignment
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method getStudentMarks
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method addAssignmentSolutions
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method saveFile
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method viewFile
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method compileCode
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method downloadFile/downloadDirectory
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method uploadFile/uploadDirectory
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
    -BEHAVIOUR:
	-If successful, , response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method runApplication/executeCommandLine
    -URL: website/api/ ??
    -HTTP: POST
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	??
    -BEHAVIOUR:
	-If successful, code is run on server, response code
	-If the request is invalid, response code
    -RESPONSE:
	-HTTP status
	-HTTP status

Method changeRole
    -URL: website/api/user ??
    -HTTP: PUT
    -PARAMETERS: Parameters are sent in the request body as fields of a JSON encoded object.
	username : string 
	    User's username; uniquely identifies user
	activeRole : Role
	    User's active role on the system (i.e. Instructor, Marker, Student)
    -BEHAVIOUR:
	-If successful, user's active role is changed, response code 204
	-If the request is invalid, response code 400
    -RESPONSE:
	-HTTP status 204
	    No response body
	-HTTP status 400
	    The body of the response is an error message
